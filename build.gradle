plugins {
    id 'java-library'
    id 'maven-publish'

    alias(libs.plugins.javafx)
    // To create a shadow/fat jar, including dependencies
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    // Use this only for local development!
    mavenLocal()

    mavenCentral()
  
    maven {
        url "https://maven.scijava.org/content/repositories/releases"
    }
  
    maven {
        url "https://maven.scijava.org/content/repositories/snapshots"
    }
  
}

ext.moduleName = 'qupath.extension.efficientv2unet'
ext.qupathVersion = gradle.ext.qupathVersion

description = 'my extension test' // TODO

version = "0.0.1"

dependencies {

    shadow "io.github.qupath:qupath-gui-fx:${qupathVersion}"
    shadow libs.qupath.fxtras
    implementation libs.bundles.logging
    implementation "io.github.qupath:qupath-extension-cellpose:0.9.2" // this works now (after it has been uploaded to maven)



    //implementation "io.github.qupath:qupath-extension-warpy:0.3.0-SNAPSHOT" // Fixme, but this works
    // below are dependencies of the "old project - v0.3.2"
    //shadow "org.slf4j:slf4j-api:1.7.30"
    //testImplementation "io.github.qupath:qupath-gui-fx:${qupathVersion}"
    //testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    
}

processResources {
  from ("${projectDir}/LICENSE.txt") {
    into 'META-INF/licenses/'
  }
}

tasks.register("copyDependencies", Copy) {
    description "Copy dependencies into the build directory for use elsewhere"
    group "QuPath"
    
    from configurations.default
    into 'build/libs'
}

/*
 * Ensure Java 17 compatibility
 */
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // changed this from 11 to 17
    }
    if (project.properties['sources'])
	    withSourcesJar()
    if (project.properties['javadocs'])
	    withJavadocJar()
}

/**
 * FIXME: oli has more entries:
 * - jar; (Manifest info) see https://github.com/BIOP/qupath-extension-cellpose/blob/8f805d3b2fe0a7ed811cc1dcc065e549b005647a/build.gradle#L69
 * - javadoc; see https://github.com/BIOP/qupath-extension-cellpose/blob/8f805d3b2fe0a7ed811cc1dcc065e549b005647a/build.gradle#L88
 * - publishing; see https://github.com/BIOP/qupath-extension-cellpose/blob/8f805d3b2fe0a7ed811cc1dcc065e549b005647a/build.gradle#L105
 */



/*
 * Create javadocs for all modules/packages in one place.
 * Use -PstrictJavadoc=true to fail on error with doclint (which is rather strict).
 */
def strictJavadoc = findProperty('strictJavadoc')
if (!strictJavadoc) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
    
/*
 * Avoid 'Entry .gitkeep is a duplicate but no duplicate handling strategy has been set.'
 * when using withSourcesJar()
 */
tasks.withType(org.gradle.jvm.tasks.Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
